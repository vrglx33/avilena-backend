type Token {
    authorization: String!,
    user: User!
}

type Result {
    sum:Float!
    createdAt:String!
}

type Query {
    getUser(id: ID!): User
    getCategoryProducts(id: ID!): [Product]
    login(email: String!, password: String!): Token!
    currentUser(token: String): User
    getProductType:[ProductType]
}

type Mutation {
  signup(username:String!, email: String!,phone: String!, address: String!): Token!
}

input UserInput {
    username: String!
    email: String!
    phone: String!
    address: String!
    birthDate: String!
    password: String!
}

type User {
    id: ID!
    username: String!
    email: String!
    phone: String!
    address: String!
    password: String!
    updatedAt: String!
    createdAt: String!
}
type Product{
    id: ID!
    name: String!
    size: String!
    type: ProductType!
    fileName: String!
}

type ProductType{
    id: ID!
    name: String!
    imageLink: String
    products: [Product]
}

type News{
    id: ID!
    title:String!
    text:String!
    image:String!
}